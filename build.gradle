
buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
        maven { url = 'https://maven.outlands.top/releases' }
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '6.10.+', changing: true
        //classpath "net.kyori:blossom:2.1.0"
        classpath "org.spongepowered:mixingradle:0.7.+"
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'java'
//apply plugin: 'net.kyori.blossom'
apply plugin: 'org.spongepowered.mixin'

version = "${minecraft_version}-${mod_version}"
group = mod_base_package
archivesBaseName = mod_id

mixin {
        add sourceSets.main, "mixins.thaumaturgy.refmap.json"
}


java.toolchain.languageVersion = JavaLanguageVersion.of(21)

minecraft {

    mappings channel: mappings_channel, version: mappings_version

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    legacy {
        fixClasspath = true
        extractMappings = true
        attachMappings = true
    }

    runs {
        client {
            workingDirectory project.file('run/client')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            jvmArgs += "-Dfml.coreMods.load=just.monika.thaumaturgy.Thaumaturgy"

        }

        server {
            workingDirectory project.file('run/server')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
            jvmArgs += "-Dfml.coreMods.load=just.monika.thaumaturgy.Thaumaturgy"
        }
    }
}


//mixin {add sourceSets.main, mod_id + ".mixins.refmap.json"}
repositories {
    //maven { url 'https://maven.aliyun.com/repository/public/' }
    maven { url 'https://maven.aliyun.com/repository/spring/'}

    maven {
        name 'Cleanroom Maven'
        url 'https://maven.cleanroommc.com/'
    }
    maven {
        url "https://repo.cleanroommc.com/snapshots"
    }
    maven {
        url "https://maven.outlands.top/releases/"
    }
    maven {
        name 'CurseMaven'
        url 'https://cursemaven.com'
        content {
            includeGroup 'curse.maven'
        }
    }

    mavenCentral()
}

dependencies {
    minecraft "com.cleanroommc:cleanroom:${cleanroom_version}"
    implementation 'curse.maven:modularui-624243:4786372-sources-4786373'
    // Use this if you want regular Forge
    //minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    /*
    annotationProcessor 'org.ow2.asm:asm-debug-all:5.2'
    annotationProcessor 'com.google.guava:guava:33.0.0-jre'
    annotationProcessor 'com.google.code.gson:gson:2.10.1'

    annotationProcessor ('com.cleanroommc:sponge-mixin:0.15.3+mixin.0.8.5')
    */

}

jar {
    manifest.attributes(
            'FMLAT': 'accesstransformer.cfg',
            "FMLCorePlugin": "just.monika.thaumaturgy.Thaumaturgy",
            "FMLCorePluginContainsFMLMod": true
    )
}


jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}
task("runClient2").dependsOn("build").finalizedBy("runClient").group = "forgegradle runs"
task("runServer2").dependsOn("build").finalizedBy("runServer").group = "forgegradle runs"